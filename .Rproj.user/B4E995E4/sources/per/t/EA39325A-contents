library(lubridate)
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
library(mice)
library(tictoc)
library(stringr)

options(scipen=999)

# https://data.public.lu/fr/datasets/liste-des-localites-avec-coordonnees/#_
# localites <- readxl::read_xlsx("/Users/woza/Documents/dataScience/atHome/data/localites-et-lieux-avec-coordonnees-v2019-4.xlsx") %>% 
# select(commune_admin = 1, commune_cadastre = 2, localite=3 ) %>% 
# mutate(localite=str_to_title(stringi::stri_trans_general(str = localite, id = "Latin-ASCII")))

# write_rds(localites, '/Users/woza/Documents/dataScience/atHome/data/localites.rds')

old_tbl1 <- read_rds('/Users/woza/Documents/dataScience/immo/data/clean/tbl_analytics/tbl_wort.rds')
write_rds(old_tbl1, paste0('/Users/woza/Documents/dataScience/immo/data/clean/backup/tbl_wort_backup',str_replace_all(lubridate::today(),'-','_'),'.rds'))

setwd('/Users/woza/Documents/dataScience/immo/data/raw/luxembourg/wortimmo/')

today_rds_dd <- str_replace_all(lubridate::today(),"-","_")
today_rds <- list.files(pattern = "*.rds") %>% 
  str_detect(.,today_rds_dd)

tbl1 <- list.files(pattern = "*.rds")[today_rds] %>% 
  map_dfr(read_rds)

tbl_data <- tbl1$data%>% 
  map_dfr(function(x){
    x%>% 
      unlist %>% 
      t %>% 
      as_tibble()
  })

tbl1 <- tbl1 %>% 
  select(-data) %>% 
  cbind(tbl_data)

tbl1 <- janitor::clean_names(tbl1)

prix_col_name <- tbl1 %>% 
  select(contains("rix_2")) %>% 
  names %>% 
  sort

last_prix <- last(prix_col_name)

link_to_remove <- tbl1 %>% 
  select(link, all_of(c(prix_col_name))) %>%
  filter_all(any_vars(str_detect(.,"€ à [:digit:]|sur demande")))

prix_col <- tbl1 %>% 
  filter(!link %in% link_to_remove$link) %>% 
  select(link, all_of(c(prix_col_name))) %>%
  distinct() %>% 
  pivot_longer(-link, names_to = "day", values_to = "valeur") %>% 
  filter(!is.na(valeur)) %>% 
  pivot_wider(id_cols = link, names_from = day, values_from = valeur) %>% 
  mutate_at(vars(-link), function(x){
    res <- str_replace_all(x, ',','.')
    str_remove_all(res, '[^[:digit:]|.]') %>% 
      as.numeric()}) 



prix_col$prix <- prix_col %>% 
  select(last_col()) %>% 
  unlist

to_num <- c('wc_separes', 'terrasse', 'balcon', 'jardin', 'chauffage_gaz',
            'cave', 'buanderie', 'ascenseur', 'cuisine_independante', "chauffage_mazout", 
            'acces_personnes_a_mobilite_reduite', 'meuble', 'piscine', 'grenier',
            'cuisine_equipee', 'cheminee', 'geothermie', #'surface_terrain',
            'solaire_photovolta', 'solaire_thermique', 'garage', 'parking_exterieur',
            'parking_souterrain', 'parking_collectif', 'parking_prive')

to_select <- c("id", "img", "link", "source", "title", "surface", "terrain", "type_annonce", "type_bien",  "type_bien_dtl",             
               "pieces", "chambres", "annee_de_construction","quartier", "ville", #"renove",
               "etage", "ascenseur", "salles_de_bains", "salles_de_douches", "wc_separes",
               "terrasse", "balcon", "jardin", "cave", "buanderie",  "grenier", "cheminee", 
               "cuisine_ouverte",  "cuisine_equipee", #"cuisine_separee",
               "panneaux_solaires", "acces_mobilite_reduite", "charges_mensuelles", "caution", 
               "meuble", 
               "chauffage_gaz", "chauffage_electrique", "chauffage_geothermique", "chauffage_mazout",         
               "montant_agence",  "piscine",  "place_parking", "parking_interieur", "parking_exterieur")

tbl_analytics1 <- tbl1 %>% 
  rename(chauffage_mazout=chauffage_au_fioul, prix = !!last_prix ) %>% 
  group_by(link) %>% 
  arrange(link, n_ref_wortimmo_lu, prix) %>% 
  slice(1) %>% 
  ungroup %>% 
  select(-contains("prix")) %>% 
  inner_join(prix_col, by="link") %>%
  mutate_at(all_of(to_num), function(x){
    ifelse(x=="FALSE"|is.na(x),0,1)}) %>% 
  mutate(nombre_de_pieces=piece_principale,
         cuisine_separee=cuisine_independante,
         acces_mobilite_reduite = acces_personnes_a_mobilite_reduite,
         chauffage_geothermique = geothermie,
         salles_de_bains= salle_de_bain,
         salles_de_douches = salle_de_douche,
         id=str_extract(link,"wi[:digit:].*"),
         # chauffage_au_gaz = chauffage_au_fioul,
         source="wortimmo",
         cuisine_ouverte = ifelse(cuisine_independante==1,0,1),
         surface= case_when(
           str_detect(surface_habitable, "[:digit:]") ~ as.numeric(trimws(stringr::str_remove(surface_habitable,'m²')))
         ),
         terrain_bis = gsub(',|;','.', surface_terrain),
         terrain = case_when(
           str_detect(terrain_bis, "[:digit:]") ~ as.numeric(str_remove_all(terrain_bis,'[:alpha:]'))
         ),
         panneaux_solaires = ifelse(solaire_thermique==1|solaire_photovolta==1,1,0),
         place_parking = ifelse(garage==1|parking_exterieur==1|parking_collectif==1|parking_souterrain==1|parking_prive==1,1,0),
         place_parking = ifelse(is.na(place_parking),0,place_parking),
         type_annonce = ifelse(str_detect(title,"vendre")|str_detect(link,"vendre"),"vente","location"),
         commission_dagence= str_replace_all(commission_dagence, "inkl| plus|avec| et"," +")  )


df_honoraire1 <- tbl_analytics1 %>% 
  select(link, type_annonce, commission_dagence, charges_mensuelles, prix) %>% 
  mutate_at(vars("commission_dagence", "charges_mensuelles"), function(x){
    ifelse(str_detect(x, "Non renseign" ), NA, x)
  }) %>% 
  mutate(is_plus17 = ifelse(type_annonce=="location" & str_detect(commission_dagence,"\\+17|\\+ 17|\\+tva|\\+ tva"), 1, 0),
         is_pct = ifelse(is_plus17==0&str_detect(commission_dagence,"%"), 1, 0),
         to_compute = ifelse(is_plus17==0 & is_pct==0 & str_detect(commission_dagence,",")| commission_dagence=="Locataire", 1, 0),
         last_euro  = ifelse(is_plus17==0 & is_pct==0 & (str_sub(commission_dagence,-1)=="€"|str_sub(commission_dagence,-3,-1)=="ttc"), 1, 0),
         pct_vente  = ifelse(type_annonce=="vente" & is_pct==1 & !str_detect(commission_dagence,"3%"), 
                             str_remove_all(str_replace_all(commission_dagence,",","."),"%|[:alpha:]"),0),
         montant_agence = case_when(
           commission_dagence %in% c("Provisionsfrei", "Vendeur", "À charge du propriétaire", 
                                     "3% inclus dans le prix de vente", "Charge vendeur") ~ 0,
           is_plus17==1|to_compute==1 ~ prix*1.17,
           type_annonce=="vente" & (is_pct==1) & pct_vente==0~ prix*0.03,
           type_annonce=="vente" & (is_pct==1) & pct_vente!=0~ prix*as.numeric(pct_vente)/100,
           
           last_euro ==1 ~ as.numeric(str_remove_all(commission_dagence,"[^[:digit:]]"))         
           ),
         charges_mensuelles= as.numeric(str_remove_all(charges_mensuelles,"[^[:digit:]]"))
         ) %>% 
  select(link, montant_agence, charges_mensuelles)


extract_type= function(x){
    str_extract(x, "vente/.*/|location/.*/|immobilier-neuf/.*/") %>% 
     map_dfr(function(y){
       pos <- str_locate_all(y,"/")
       start_bien <- ifelse(nrow(pos[[1]])>=1,pos[[1]][1,1]+1,1)
       end_bien  <- ifelse(nrow(pos[[1]])>=2, pos[[1]][2,1]-1, -1)
       
       n_row <- nrow(pos[[1]])
       start_ville <- ifelse(n_row>=1, pos[[1]][(n_row-1),1]+1, 1)
       end_ville  <-  ifelse(n_row>=2, pos[[1]][n_row,1]-1, -1)
       extract_ville <- str_sub(y, start_ville, end_ville)
       ville <- ifelse(str_detect(extract_ville, 'luxembourg-'),'luxembourg', extract_ville)
       quartier <- str_remove(extract_ville,'luxembourg-')
       type_bien_dtl <- str_sub(y, start_bien, end_bien)
       
       type_bien = case_when(
         type_bien_dtl %in% c("appartement", "loft", "penthouse", "studio", "duplex", "triplex") ~  "appartement",
         str_detect(type_bien_dtl, "maison|ferme") | type_bien_dtl %in% c("bungalow", "chalet", "chateau", "villa",
                                                                    "", "") ~  "maison",
         type_bien_dtl  %in% c("fonds-de-commerce","local-industriel", "restauration-hotellerie", 
                               "local-commercial", "locaux-pour-professions-liberales", "commerce", 
                               "entrepot")  ~ "commerce",
         type_bien_dtl  %in% c("garage", "parking") ~ "garage-parking" ,
         type_bien_dtl  %in% c("bureau-divisible", "bureau")  ~"bureau",
         type_bien_dtl  %in% c("residence", "immeuble-de-rapport", "lotissement", "lotissement-residence") ~"immeuble-de-rapport" ,
         TRUE ~ as.character(type_bien_dtl)
       )
       data.frame(type_bien_dtl=type_bien_dtl,
                  type_bien = type_bien,
                  ville=ville, quartier=quartier)
     })
}

info_complementaire <- extract_type(x=df_honoraire1$link)


df_honoraire1 <- df_honoraire1 %>% 
  cbind(info_complementaire)

tbl_analytics1 <- tbl_analytics1 %>% 
  select(-charges_mensuelles) %>% 
  left_join(df_honoraire1, by="link")

  
tbl_analytics1 <- tbl_analytics1  %>% 
  rename(chambres=chambre,
         pieces=piece_principale,
         parking_interieur=parking_souterrain) %>% 
  filter(tolower(type_bien) %in% c('appartement', 'chambre', 'maison')) %>% 
  mutate(pieces=ifelse(type_bien_dtl=="studio",1, abs(as.numeric(pieces))),
         chambres=case_when(
           type_bien_dtl=="chambre" ~ 1,
           type_bien_dtl=="studio" ~ 0,
           TRUE ~ as.numeric(chambres))) %>% 
  select(all_of(to_select))  %>% 
  left_join(prix_col, by="link") 

to_num <- c('salles_de_douches', 'salles_de_bains', 'chambres', 'pieces', 'montant_agence','chauffage_mazout')

tbl_analytics1 <- tbl_analytics1  %>%   
  mutate_at(all_of(to_num), as.numeric) %>% 
  mutate(etage = as.numeric(str_remove_all(etage,"[^[:digit:]]")),
         caution = as.numeric(str_remove_all(caution,"[^[:digit:]]")),
         annee_de_construction = as.numeric(str_remove_all(annee_de_construction,"[^[:digit:]]")),
         chauffage_electrique = case_when(
           is.na(chauffage_electrique)| tolower(chauffage_electrique) %in% c('no','nein','false','non') ~ 0,
           TRUE~1)
  )

tbl_analytics_new_id1 <- tbl_analytics1 %>% 
  filter(!link %in% unique(old_tbl1$link) )

tbl_analytics_new_price1 <- tbl_analytics1 %>% 
  filter(link %in% unique(old_tbl1$link) ) %>% 
  select(link, contains("rix"))

tbl_analytics1 <- old_tbl1 %>% 
  select(-prix) %>% 
  left_join(tbl_analytics_new_price1, by='link') %>% 
  bind_rows(tbl_analytics_new_id1)







imp_var <- c("id", "surface", "type_annonce", "type_bien", "type_bien_dtl", "chambres", 
             "quartier", "ascenseur", "terrasse", "balcon", "jardin", "cave", "grenier",  
             "cuisine_ouverte", "cuisine_equipee", "place_parking", "prix")


size <- tbl_analytics1 %>% 
  filter(tolower(type_bien) %in% c('appartement',  'maison')) %>% 
  ungroup %>% 
  select(all_of(imp_var)) 


bien_na <- size %>% 
  group_by(type_bien) %>% 
  filter(is.na(surface)|is.na(chambres)) %>% 
  summarise(n_na=n()) %>% 
  .$type_bien

impute_df <- bien_na %>% 
  map_dfr(function(y){
    
    size <-  size %>% 
      select(-type_bien_dtl) %>% 
      filter(type_bien==y) %>% 
      split(.$type_annonce)
    
    
    
    size %>% 
      map_dfr(function(x){
        df_noid <-  x %>% 
          select(-id)
        
        res <- mice(df_noid, m = 5, maxit=100, print=F) %>% 
          complete("long") %>% 
          group_by(.id) %>% 
          summarise(chambres=median(chambres),
                    surface=median(surface))
        
        x %>%
          mutate(chambres = res$chambres, 
                 surface=res$surface) %>% 
          select(id, chambres, surface)
        
      }) 
    
    
  })

tbl_analytics1 <- tbl_analytics1 %>%  
  select(all_of(to_select), starts_with('prix'))  %>% 
  rename(chambre_del=chambres, surface_del=surface) %>% 
  left_join(impute_df, by='id') %>% 
  mutate(chambres= ifelse(is.na(chambres), chambre_del, chambres),
         surface= ifelse(is.na(surface), surface_del, surface)) %>% 
  select(-ends_with('_del')) %>% 
  select(-starts_with('prix'), everything()) 


write_rds(tbl_analytics1 ,'/Users/woza/Documents/dataScience/immo/data/clean/tbl_analytics/tbl_wort.rds')


