{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"sub_loc %>% group_by(neighbourhood_group) %>% summarise(n_appart = n()) %>% \n    ungroup() %>% arrange(desc(neighbourhood_group)) %>% mutate(pct = round(100 * \n    n_appart/sum(n_appart), 1), pct_label = cumsum(pct) - 0.5 * \n    pct, n_label = ifelse(n_appart > 4000, format(n_appart, digits = 9,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[i]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"arrange(., desc(neighbourhood_group))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"arrange.data.frame(., desc(neighbourhood_group))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"arrange_rows(.data, dots)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"map2(data, directions, function(column, direction) {\n    proxy <- vec_proxy_compare(column, relax = TRUE)\n    desc <- identical(direction, \"desc\")\n    if (is.data.frame(proxy)) { ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mapply(.f, .x, .y, MoreArgs = list(...), SIMPLIFY = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (column, direction) \n{\n    proxy <- vec_proxy_compare(column, relax = TRUE)\n    desc <- identical(direction, \"desc\") ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vec_proxy_compare(column, relax = TRUE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"ellipsis::check_dots_empty()","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"action_dots(action = action, message = \"`...` is not empty.\", \n    dot_names = names(dots), note = \"These dots only exist to allow future extensions and should be empty.\", \n    .subclass = \"rlib_error_dots_nonempty\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"action(message, .subclass = c(.subclass, \"rlib_error_dots\"), \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(fallback)","line_number":0}],"message":"Error: `...` is not empty.\n\nWe detected these problematic arguments:\n* `relax`\n\nThese dots only exist to allow future extensions and should be empty.\nDid you misspecify an argument?\n"}